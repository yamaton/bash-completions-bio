# Auto-generated with h2o

_easel()
{
    local cur prev words cword
    _init_completion -s || return

    local cmd i subcommands
    local subcommands=" alistat downsample filter index"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        alistat) _easel_alistat
            return
            ;;

        downsample) _easel_downsample
            return
            ;;

        filter) _easel_filter
            return
            ;;

        index) _easel_index
            return
            ;;

    esac

    local word_list=" alistat downsample filter index "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_alistat()
{
    local cmd i subcommands
    local subcommands=" easel"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        easel) _easel_alistat_easel
            return
            ;;

    esac

    local word_list=" easel -h -1 --dna --rna --amino"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_alistat_easel()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_downsample()
{
    local word_list="  -h -s -S --seed"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_filter()
{
    local cmd i subcommands
    local subcommands=" easel"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        easel) _easel_filter_easel
            return
            ;;

    esac

    local word_list=" easel -h -o --informat --outformat --dna --rna --amino --ignore-rf --fragthresh --symfrac --no-sampling --nsamp --sampthresh --maxfrag -s --conscover --randorder --origorder"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_filter_easel()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_index()
{
    local cmd i subcommands
    local subcommands=" easel"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        easel) _easel_index_easel
            return
            ;;

    esac

    local word_list=" easel -h -a -u --informat"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_easel_index_easel()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _easel easel
