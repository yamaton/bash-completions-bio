# Auto-generated with h2o

_salmon()
{
    local cur prev words cword
    _init_completion -s || return

    local cmd i subcommands
    local subcommands=" index quant alevin swim quantmerge"

    for (( i=1; i < cword; i++ )); do
        if [[ " ${subcommands[*]} " == *" ${words[i]} "* ]]; then
            cmd=${words[i]}
            break
        fi
    done

    case "$cmd" in
        index) _salmon_index
            return
            ;;

        quant) _salmon_quant
            return
            ;;

        alevin) _salmon_alevin
            return
            ;;

        swim) _salmon_swim
            return
            ;;

        quantmerge) _salmon_quantmerge
            return
            ;;

    esac

    local word_list=" index quant alevin swim quantmerge "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_salmon_index()
{
    local word_list="  -v --version -h --help -t --transcripts -k --kmerLen -i --index --gencode --features --keepDuplicates -p --threads --keepFixedFasta -f --filterSize --tmpdir --sparse -d --decoys -n --no-clip --type"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_salmon_quant()
{
    local word_list="  -l --libType -i --index -r --unmatedReads -1 --mates1 -2 --mates2 -v --version -h --help -o --output --seqBias --gcBias --posBias -p --threads --incompatPrior -g --geneMap --auxTargetFile --meta --discardOrphansQuasi --validateMappings --consensusSlack --preMergeChainSubThresh --postMergeChainSubThresh --orphanChainSubThresh --scoreExp --minScoreFraction --mismatchSeedSkip --disableChainingHeuristic --decoyThreshold --ma --mp --go --ge --bandwidth --allowDovetail --recoverOrphans --mimicBT2 --mimicStrictBT2 --softclip --softclipOverhangs --fullLengthAlignment --hardFilter --minAlnProb -z --writeMappings --writeQualities --hitFilterPolicy --alternativeInitMode --auxDir --skipQuant --dumpEq -d --dumpEqWeights --minAssignedFrags --reduceGCMemory --biasSpeedSamp --fldMax --fldMean --fldSD -f --forgettingFactor --initUniform --maxOccsPerHit -w --maxReadOcc --maxRecoverReadOcc --noLengthCorrection --noEffectiveLengthCorrection --noSingleFragProb --noFragLengthDist --noBiasLengthThreshold --numBiasSamples --numAuxModelSamples --numPreAuxModelSamples --useEM --useVBOpt --rangeFactorizationBins --numGibbsSamples --noGammaDraw --numBootstraps --bootstrapReproject --thinningFactor -q --quiet --perTranscriptPrior --perNucleotidePrior --sigDigits --vbPrior --writeOrphanLinks --writeUnmappedNames --discardOrphans -l --libType -a --alignments -e --eqclasses -t --targets --ont -v --version -h --help -o --output --seqBias --gcBias --posBias -p --threads --incompatPrior -g --geneMap --auxTargetFile --meta --noErrorModel --numErrorBins -s --sampleOut -u --sampleUnaligned --gencode --scoreExp --mappingCacheMemoryLimit --alternativeInitMode --auxDir --skipQuant --dumpEq -d --dumpEqWeights --minAssignedFrags --reduceGCMemory --biasSpeedSamp --fldMax --fldMean --fldSD -f --forgettingFactor --initUniform --maxOccsPerHit -w --maxReadOcc --maxRecoverReadOcc --noLengthCorrection --noEffectiveLengthCorrection --noSingleFragProb --noFragLengthDist --noBiasLengthThreshold --numBiasSamples --numAuxModelSamples --numPreAuxModelSamples --useEM --useVBOpt --rangeFactorizationBins --numGibbsSamples --noGammaDraw --numBootstraps --bootstrapReproject --thinningFactor -q --quiet --perTranscriptPrior --perNucleotidePrior --sigDigits --vbPrior --writeOrphanLinks --writeUnmappedNames"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_salmon_alevin()
{
    local word_list="  -l --libType -i --index -r --unmatedReads -1 --mates1 -2 --mates2 -v --version -h --help -o --output -j --rad --sketch -p --threads --tgMap --hash --dropseq --chromiumV3 --chromium --gemcode --citeseq --celseq --celseq2 --splitseqV1 --splitseqV2 --quartzseq2 --sciseq3 --whitelist --featureStart --featureLength --noQuant --numCellBootstraps --numCellGibbsSamples --forceCells --expectCells --mrna --rrna --keepCBFraction --read-geometry --bc-geometry --umi-geometry --end --umiLength --barcodeLength --noem --freqThreshold --umiEditDistance --dumpfq --dumpBfh --dumpArborescences --dumpUmiGraph --dumpCellEq --dumpFeatures --dumpMtx --lowRegionMinNumBarcodes --maxNumBarcodes"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_salmon_swim()
{
    local word_list="  "
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

_salmon_quantmerge()
{
    local word_list="  -v --version -h --help --quants --names -c --column --genes --missing -o --output"
    COMPREPLY=( $(compgen -W "${word_list}" -- "$cur") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _salmon salmon
